(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{431:function(t,e,a){"use strict";a.r(e);var v=a(65),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"总体概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总体概述"}},[t._v("#")]),t._v(" 总体概述")]),t._v(" "),a("p",[t._v("响应式原理是 vue 与 react 最大的一个区别，在 vue 中通过直接改变 data 中的一个数据，vue 会监听到数据的改变，自动进行页面的刷新，而在 react 需要明确的调用一个改变这个数据的方法，setState,或者对应的 hook 的方法去告诉 react 进行页面一个重新更新。一个形象的比喻一个是手动挡，一个自动挡。")]),t._v(" "),a("p",[t._v("react 仅仅是一个视图层 view 的库，并不是一个完整的框架，路由，以及状态都由第三方提供。")]),t._v(" "),a("p",[t._v("vue 官方提供提供以及维护全套的路由，和状态。")]),t._v(" "),a("h3",{attrs:{id:"共通点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#共通点"}},[t._v("#")]),t._v(" 共通点")]),t._v(" "),a("p",[t._v("都用到虚拟 dom,组件式开发，数据驱动视图。")]),t._v(" "),a("h3",{attrs:{id:"diff-算法不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法不同"}},[t._v("#")]),t._v(" diff 算法不同")]),t._v(" "),a("p",[t._v("vue 使用双向链表，边对比，边更新dom。")]),t._v(" "),a("p",[t._v("react 先转为虚拟dom 在转为fiber，最后递归遍历更新到真实dom.")]),t._v(" "),a("h3",{attrs:{id:"事件机制不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件机制不同"}},[t._v("#")]),t._v(" 事件机制不同")]),t._v(" "),a("p",[t._v("vue 使用原生web事件机制。react 使用事件委托，所有事件冒泡到顶层document监听。")]),t._v(" "),a("p",[t._v("在绑定事件时候，vue通过指令v-on，简写@click执行绑定，react通过onClick 进行事件绑定。")]),t._v(" "),a("p",[t._v("vue 中所有的事件方法写在 method 中，react 写在函数里面，或者class里面。")]),t._v(" "),a("h3",{attrs:{id:"组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),a("p",[t._v("react 父子通信 props，子传父通过回调。子组件在props 导出需要的参数，导出的如果是函数，直接可以调用，父调子通过ref 或者子组件的实例。兄弟组件通过通过订阅发布，或者共享同一个父租组建，跨层级组件通过context,或者第三方状态共享redux 或者dva 等。")]),t._v(" "),a("p",[t._v("vue 父子通信props, 子传父通过，回调。父组件传递到子组件的时候，子组件需要声明后可以使用，如果没有声明，则在this.$attrs，子组件调用父组件的函数通过emit进行触发。vue 可以在父组件中给子组件绑定一个函数，通过native 修饰符。vue 可以通过 this.$parent获取父组件的实例，this.$children获取子组件的实例。跨组件通信vue 通过provide 和 inject,provide 提供数据，inject 消费数据。")]),t._v(" "),a("h3",{attrs:{id:"this指向问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this指向问题"}},[t._v("#")]),t._v(" this指向问题")]),t._v(" "),a("p",[t._v("react 的this  始终指向当前的组件。")]),t._v(" "),a("p",[t._v("vue 中methods 普通函数指向vue 实例，箭头函数指向window;")])])}),[],!1,null,null,null);e.default=r.exports}}]);